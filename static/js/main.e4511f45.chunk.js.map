{"version":3,"sources":["component/AddContactInput/AddContactInput.module.css","component/AddContact/AddContact.module.css","component/ContactItem/ContactItem.module.css","component/App/App.module.css","component/Spinner/Spinner.module.css","component/ContactList/ContactList.module.css","Redux/phonebook/phonebook-slice.js","Redux/store.js","component/AddContactInput/AddContactInput.js","component/Spinner/Spinner.js","component/AddContact/AddContact.js","component/ContactItem/ContactItem.js","component/Filter/Filter.js","component/ContactList/ContactList.js","component/App/App.js","index.js"],"names":["module","exports","phonebookApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getFetchPhonebook","query","providesTags","getCreateContact","mutation","body","url","method","invalidatesTags","isSuccess","getDeleteContact","phonebookId","useGetFetchPhonebookQuery","useGetDeleteContactMutation","useGetCreateContactMutation","store","configureStore","reducer","middleware","getDefaultMiddleware","setupListeners","dispatch","AddContactInput","type","name","value","hahdleChange","title","pattern","className","style","label","input","toLowerCase","onChange","required","Spinner","height","width","s","wrapper","color","AddContact","useState","setName","number","setNumber","handleAddContact","isLoading","isErr","isError","err","error","data","useEffect","toast","status","e","currentTarget","resetState","inputForm","onSubmit","preventDefault","find","contact","info","phone","btn","disabled","ContactItem","delet","item","button","onClick","id","Filtr","ContactList","filter","setFilter","length","list","includes","map","App","container","position","autoClose","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e4511f45.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"AddContactInput_label__1CzGn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputForm\":\"AddContact_inputForm__12vCS\",\"btn\":\"AddContact_btn__2eDQK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__1MpG2\",\"button\":\"ContactItem_button__2Wjoq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1A89w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Spinner_wrapper__2JEmm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__o7_-H\"};","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\n// Define a service using a base URL and expected endpoints\r\nexport const phonebookApi = createApi({\r\n  reducerPath: 'phonebookApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://61a4a9114c822c0017041d6f.mockapi.io/' }),\r\n  tagTypes: ['Phone'],\r\n  endpoints: (builder) => ({\r\n    getFetchPhonebook: builder.query({\r\n        query: () => `contacts`,\r\n        providesTags: ['Phone'],\r\n    }),\r\n      getCreateContact: builder.mutation({\r\n        query: ( body ) => ({\r\n              url: `contacts`,\r\n              method: 'POST',\r\n          body,\r\n              }),\r\n          invalidatesTags: isSuccess => isSuccess ? ['Phone'] : []\r\n    }),\r\n      getDeleteContact: builder.mutation({\r\n          query: phonebookId => ({\r\n              url: `contacts/${phonebookId}`,\r\n              method: 'DELETE',\r\n        }),\r\n        \r\n        invalidatesTags: isSuccess => isSuccess ? ['Phone'] : []\r\n    })\r\n    }),\r\n  \r\n})\r\n// transformResponse: (error) => console.log('r', error) ,\r\n// Export hooks for usage in functional components, which are\r\n// auto-generated based on the defined endpoints\r\nexport const { useGetFetchPhonebookQuery,useGetDeleteContactMutation,useGetCreateContactMutation } = phonebookApi","\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { setupListeners } from \"@reduxjs/toolkit/dist/query\";\r\n// import logger from \"redux-logger\";\r\n// import phonebookReducer from \"./phonebook/phonebook-reducer\";\r\n// import {\r\n//     // persistStore,\r\n//     // persistReducer,\r\n//     // FLUSH,\r\n//     // REHYDRATE,\r\n//     // PAUSE,\r\n//     // PERSIST,\r\n//     // PURGE,\r\n//     // REGISTER,\r\n// } from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\nimport { phonebookApi } from \"./phonebook/phonebook-slice\";\r\n\r\n// const persistConfig = {\r\n//     key: \"contacts\",\r\n//     storage,\r\n//     blacklist: [\"filter\"],\r\n// }\r\n\r\n// const middleware = [...getDefaultMiddleware({\r\n//     serializableCheck: {\r\n//         ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]\r\n//     }\r\n// }), logger]\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    // phonebook: persistReducer(persistConfig, phonebookReducer),\r\n      [phonebookApi.reducerPath]: phonebookApi.reducer,\r\n},\r\n    middleware: getDefaultMiddleware => [...getDefaultMiddleware(),phonebookApi.middleware,],\r\n//   devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// export { store,persistor };\r\nsetupListeners(store.dispatch);","import PropTypes from \"prop-types\";\r\nimport style from \"./AddContactInput.module.css\"\r\n\r\nexport default function AddContactInput({type,name,value,hahdleChange,title,pattern}) {\r\n    return (\r\n        <label className={style.label}>{name}\r\n            <input\r\n                className={style.input}\r\n                type={type}\r\n                name={name.toLowerCase()}\r\n                value={value}\r\n                onChange={hahdleChange}\r\n                title={title}\r\n                pattern={pattern}\r\n                required\r\n            />\r\n        </label>\r\n    )\r\n}\r\n\r\nAddContactInput.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    pattern: PropTypes.string.isRequired,\r\n    hahdleChange: PropTypes.func.isRequired,\r\n}","// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport s from \"./Spinner.module.css\";\r\n// height={12} width={84}\r\nconst Spinner = ({ height, width }) => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={height} width={width} />\r\n    </div>\r\n  );\r\n};\r\nexport default Spinner;","import { useState,useEffect } from \"react\";\r\nimport AddContactInput from \"../AddContactInput/AddContactInput\";\r\nimport style from './AddContact.module.css'\r\nimport { useGetCreateContactMutation,useGetFetchPhonebookQuery } from \"../../Redux/phonebook/phonebook-slice\";\r\nimport Spinner from '../Spinner/Spinner';\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n\r\nexport default function AddContact() {\r\n    const [name, setName] = useState(\"\");\r\n    const [number, setNumber] = useState(\"\");\r\n    \r\n    const [handleAddContact, {isLoading, isError:isErr, error:err}] = useGetCreateContactMutation();\r\n    const { data,isSuccess } = useGetFetchPhonebookQuery();\r\n    \r\n    useEffect(() => {\r\n        if (isErr) {\r\n        toast.error(`error ${err.status} (${err.data})`);\r\n    }\r\n    },[isErr,err])\r\n    \r\n    const hahdleChange = e => {\r\n        if (e.currentTarget.name === \"name\") setName(e.currentTarget.value);\r\n        if (e.currentTarget.name === \"number\") setNumber(e.currentTarget.value);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (data.find((contact) => contact.name.toLowerCase() === name.toLowerCase()))\r\n        {\r\n           toast.info(`\"${name}\" is already in contacts.`)\r\n        }\r\n        else handleAddContact({  name,phone:number });\r\n        \r\n        resetState();\r\n    };\r\n\r\n    const resetState = () => {\r\n        setName(\"\");\r\n        setNumber(\"\");\r\n    }\r\n    \r\n    return (\r\n        <form className={style.inputForm} onSubmit={handleSubmit}>\r\n            <AddContactInput\r\n                type=\"text\"\r\n                name=\"Name\"\r\n                value={name}\r\n                hahdleChange={hahdleChange}\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            />\r\n            <AddContactInput\r\n                type=\"tel\"\r\n                name=\"Number\"\r\n                value={number}\r\n                hahdleChange={hahdleChange}\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            />\r\n                \r\n            \r\n            <button type=\"submit\" className={style.btn} disabled={!isSuccess}>\r\n                {isLoading ? <Spinner height={10} width={70}/> : 'Add contact'}</button>\r\n        </form>\r\n    )\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport style from \"./ContactItem.module.css\";\r\nimport { useGetDeleteContactMutation } from \"../../Redux/phonebook/phonebook-slice\";\r\nimport Spinner from '../Spinner/Spinner';\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function ContactItem({ contact }) {\r\n    const [delet, { isLoading, isError, error }] = useGetDeleteContactMutation();\r\n    \r\n    if (isError) {\r\n        toast.error(`error ${error.status} (${error.data})`)\r\n    }\r\n    return (\r\n        <li className={style.item}>\r\n            <p>{contact.name}:</p>\r\n            <p>{contact.phone}</p>\r\n            <button\r\n                className={style.button}\r\n                onClick={()=>delet(contact.id)}\r\n                // onClick={deletes}\r\n            >{isLoading ? <Spinner height={8} width={40}/> : 'delete'}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nContactItem.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n}","import AddContactInput from \"../AddContactInput/AddContactInput\"\r\n\r\nexport default function Filtr({value,onChange}) {\r\n    return (\r\n         <AddContactInput\r\n                type=\"text\"\r\n                name=\"Find contacts by name\"\r\n                value={value}\r\n                hahdleChange={(e)=>onChange(e.currentTarget.value)}\r\n                title=\"\"\r\n                pattern=\"\"\r\n            />\r\n    )\r\n}\r\n","\r\nimport ContactItem from \"../ContactItem/ContactItem\"\r\nimport style from \"./ContactList.module.css\"\r\nimport Filtr from \"../Filter/Filter\";\r\nimport { useState } from \"react\";\r\nimport { useGetFetchPhonebookQuery } from '../../Redux/phonebook/phonebook-slice';\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function ContactList() {\r\n  const [filter, setFilter] = useState('')\r\n  \r\n  const { data, isError, error } = useGetFetchPhonebookQuery();\r\n\r\n  if (isError) {\r\n        toast.error(`error ${error.status} (${error.data})`);\r\n  }\r\n  \r\n  const changeFilter = (e) => {\r\n    setFilter(e);\r\n  };\r\n  \r\n  const contactsVisible = () => {\r\n    return data.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n  \r\n  return (\r\n  <>\r\n    {(data && data.length > 0) ? (\r\n      <>\r\n        <Filtr value={filter} onChange={changeFilter} />\r\n\r\n          <ul className={style.list}>\r\n            {contactsVisible().map(contact => {\r\n              return (<ContactItem key={contact.id} contact={contact}/>)\r\n                }\r\n              )\r\n            }\r\n          </ul>\r\n      </>\r\n    ):(<h4>Your phonebook is empty</h4>)\r\n}\r\n  </>  \r\n  )\r\n}\r\n","import style from './App.module.css'\nimport AddContact from \"../AddContact/AddContact\";\nimport ContactList from \"../ContactList/ContactList\";\nimport { ToastContainer } from \"react-toastify\";\n\nexport default function App() {\n    return (\n      <div className={style.container}>\n        <h1>Phonebook</h1>\n        <AddContact  />\n        <h2>Contacts</h2>\n          <ContactList  />\n        <ToastContainer position= \"top-right\" autoClose= '2000'/> \n      </div>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport {store} from \"./Redux/store\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n\nimport './index.css';\nimport App from './component/App/App'\n\n\nReactDOM.render(\n  <Provider store={store}>\n  {/* <PersistGate loading={null} persistor={persistor}> */}\n  \n    <App />\n  \n  {/* </PersistGate > */}\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}